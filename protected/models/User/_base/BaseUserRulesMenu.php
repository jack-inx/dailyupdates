<?php

/**
 * This is the model base class for the table "user_rules_menu".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UserRulesMenu".
 *
 * Columns in table "user_rules_menu" available as properties of the model,
 * followed by relations of table "user_rules_menu" available as properties of the model.
 *
 * @property string $id
 * @property string $parent_id
 * @property string $rule_id
 * @property string $module_id
 * @property string $Label
 * @property string $url
 * @property integer $position
 * @property integer $is_active
 *
 * @property Module $module
 * @property UserRules $rule
 */
abstract class BaseUserRulesMenu extends CActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'UserRulesMenu';
    }

    public static function label($n = 1) {
        return Yii::t('app', 'UserRulesMenu|UserRulesMenus', $n);
    }

    public static function representingColumn() {
        return 'Label';
    }

    public function rules() {
        return array(
            array('Label, Url, Position, is_active', 'required'),
            array('Position, IsActive', 'numerical', 'integerOnly'=>true),
            array('Parent_id, RuleId, ModuleId', 'length', 'max'=>10),
            array('Label', 'length', 'max'=>50),
            array('Url', 'length', 'max'=>255),
            array('ParentId, RuleId, ModuleId', 'default', 'setOnEmpty' => true, 'value' => null),
            array('Id, ParentId, RuleId, ModuleId, Label, Url, Position, IsActive', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'Module' => array(self::BELONGS_TO, 'Module', 'ModuleId'),
            'Rule' => array(self::BELONGS_TO, 'UserRules', 'RuleId'),
        );
    }

    public function pivotModels() {
        return array(
        );
    }

    public function attributeLabels() {
        return array(
            'Id' => Yii::t('app', 'ID'),
            'ParentId' => Yii::t('app', 'Parent'),
            'RuleId' => null,
            'ModuleId' => null,
            'Label' => Yii::t('app', 'Label'),
            'Url' => Yii::t('app', 'Url'),
            'Position' => Yii::t('app', 'Position'),
            'IsActive' => Yii::t('app', 'Is Active'),
            'Module' => null,
            'Rule' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('Id', $this->Id, true);
        $criteria->compare('ParentId', $this->ParentId, true);
        $criteria->compare('RuleId', $this->RuleId);
        $criteria->compare('ModuleId', $this->ModuleId);
        $criteria->compare('Label', $this->Label, true);
        $criteria->compare('Url', $this->Url, true);
        $criteria->compare('Position', $this->Position);
        $criteria->compare('IsActive', $this->IsActive);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }
}