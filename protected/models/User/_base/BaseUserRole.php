<?php

/**
 * This is the model base class for the table "user_role".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UserRole".
 *
 * Columns in table "user_role" available as properties of the model,
 * followed by relations of table "user_role" available as properties of the model.
 *
 * @property string $id
 * @property string $parent_id
 * @property integer $tree_level
 * @property integer $sort_order
 * @property string $role_type
 * @property string $role_name
 * @property string $role_desc
 * @property integer $is_publish
 *
 * @property UserRules[] $userRules
 */
abstract class BaseUserRole extends CActiveRecord {

    public static function model($className = __CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'UserRole';
    }

    public static function label($n = 1) {
        return Yii::t('app', 'UserRole|UserRoles', $n);
    }

    public static function representingColumn() {
        return 'RoleType';
    }

    public function rules() {
        return array(
            array('RoleType, RoleName, RoleDesc, IsPublish', 'required'),
            array('TreeLevel, SortOrder, IsPublish', 'numerical', 'integerOnly' => true),
            array('ParentId', 'length', 'max' => 10),
            array('RoleType', 'length', 'max' => 6),
            array('RoleName', 'length', 'max' => 50),
            array('ParentId, TreeLevel, SortOrder', 'default', 'setOnEmpty' => true, 'value' => null),
            array('Id, ParentId, TreeLevel, SortOrder, RoleType, RoleName, RoleDesc, IsPublish', 'safe', 'on' => 'search'),
        );
    }

    public function relations() {
        return array(
            'userRules' => array(self::HAS_MANY, 'UserRules', 'RoleId'),
        );
    }

    public function pivotModels() {
        return array(
        );
    }

    public function attributeLabels() {
        return array(
            'Id' => Yii::t('app', 'ID'),
            'ParentId' => Yii::t('app', 'Parent'),
            'TreeLevel' => Yii::t('app', 'Tree Level'),
            'SortOrder' => Yii::t('app', 'Sort Order'),
            'RoleType' => Yii::t('app', 'Role Type'),
            'RoleName' => Yii::t('app', 'Role Name'),
            'RoleDesc' => Yii::t('app', 'Role Desc'),
            'IsPublish' => Yii::t('app', 'Is Publish'),
            'UserRules' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('Id', $this->id, true);
        $criteria->compare('ParentId', $this->parent_id, true);
        $criteria->compare('TreeLevel', $this->tree_level);
        $criteria->compare('SortOrder', $this->sort_order);
        $criteria->compare('RoleType', $this->role_type, true);
        $criteria->compare('RoleName', $this->role_name, true);
        $criteria->compare('RoleDesc', $this->role_desc, true);
        $criteria->compare('IsPublish', $this->is_publish);

        return new CActiveDataProvider($this, array(
                    'criteria' => $criteria,
                ));
    }

}