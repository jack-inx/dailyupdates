<?php

/**
 * This is the model base class for the table "module".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Module".
 *
 * Columns in table "module" available as properties of the model,
 * followed by relations of table "module" available as properties of the model.
 *
 * @property string $id
 * @property string $module_code
 * @property string $version
 * @property integer $is_publish
 *
 * @property UserRules[] $userRules
 */
abstract class BaseModule extends CActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'Module';
    }

    public static function label($n = 1) {
        return Yii::t('app', 'Module|Modules', $n);
    }

    public static function representingColumn() {
        return 'ModuleCode';
    }

    public function rules() {
        return array(
            array('IsPublish', 'numerical', 'integerOnly'=>true),
            array('ModuleCode, Version', 'length', 'max'=>50),
            array('ModuleCode, Version, IsPublish', 'default', 'setOnEmpty' => true, 'value' => null),
            array('Id, ModuleCode, Version, IsPublish', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'UserRules' => array(self::HAS_MANY, 'UserRules', 'ModuleId'),
        );
    }

    public function pivotModels() {
        return array(
        );
    }

    public function attributeLabels() {
        return array(
            'Id' => Yii::t('app', 'ID'),
            'ModuleCode' => Yii::t('app', 'Module Code'),
            'Version' => Yii::t('app', 'Version'),
            'IsPublish' => Yii::t('app', 'Is Publish'),
            'UserRules' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('Id', $this->Id, true);
        $criteria->compare('ModuleCode', $this->ModuleCode, true);
        $criteria->compare('Version', $this->Version, true);
        $criteria->compare('IsPublish', $this->IsPublish);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }
}